import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
}

group = 'com.tars'
version = '0.0.1-SNAPSHOT'

ext {
	set('springCloudVersion', "2024.0.0")
}


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/**
	 * circuit breaker
	 */
	implementation("org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j")
	implementation("org.springframework.cloud:spring-cloud-starter-loadbalancer")
	implementation("org.springframework.cloud:spring-cloud-circuitbreaker-spring-retry")
	//implementation("io.github.resilience4j:resilience4j-spring-boot2")

	/**
	 * open feign
	 */
	implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
	implementation("io.github.openfeign:feign-okhttp")

	/**
	 * swagger
	 */
	implementation("org.springdoc:springdoc-openapi-ui:1.6.7")
	implementation("org.springdoc:springdoc-openapi-kotlin:1.6.7")

	/**
	 * jwt
	 */
	//builder, parser
	implementation("io.jsonwebtoken:jjwt-api:0.11.5")
	// api impl
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
	// serialization
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")


	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'

	// Kotlin Coroutines
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.7.3'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-slf4j:1.7.3'

	runtimeOnly 'org.postgresql:postgresql'

	testImplementation "io.kotest:kotest-runner-junit5:6.0.0"
	testImplementation "io.kotest:kotest-assertions-core:6.0.0"
	testImplementation "io.mockk:mockk:1.14.6"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

kotlin {
	jvmToolchain(21)

	compilerOptions {
		freeCompilerArgs.addAll("-Xjsr305=strict")
		jvmTarget.set(JvmTarget.JVM_21)
	}
}

allOpen {
	annotation 'jakarta.persistence.Entity'
	annotation 'jakarta.persistence.MappedSuperclass'
	annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
	useJUnitPlatform()
}
